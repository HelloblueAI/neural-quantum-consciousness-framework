# Fixed AGI Nginx Configuration
# Professional deployment without SSL (for now)

server {
    listen 80;
    listen [::]:80;
    server_name 67.170.47.156 bleujs.org;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=agi:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Health check endpoint (most specific first)
    location = /agi/health {
        limit_req zone=agi burst=10 nodelay;
        
        proxy_pass http://localhost:8080/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache health checks for 30 seconds
        proxy_cache_valid 200 30s;
        add_header Cache-Control "public, max-age=30";
    }
    
    # Consciousness endpoint
    location = /agi/consciousness {
        limit_req zone=agi burst=15 nodelay;
        
        proxy_pass http://localhost:8080/consciousness;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API endpoints (specific)
    location = /agi/reason {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://localhost:8080/reason;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }
    
    location = /agi/learn {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://localhost:8080/learn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }
    
    location = /agi/create {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://localhost:8080/create;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
    }
    
    # AGI landing page
    location = /agi {
        return 200 '{"message": "NeuralCore True AGI API", "version": "1.0.0", "endpoints": ["/agi/health", "/agi/consciousness", "/agi/reason", "/agi/learn", "/agi/create"], "documentation": "https://github.com/HelloblueAI/neural-quantum-consciousness-framework"}';
        add_header Content-Type application/json;
        add_header Cache-Control "no-cache";
    }
    
    # Root redirect to AGI
    location = / {
        return 301 http://$server_name/agi;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
} 